import React, { useState, useEffect } from "react";
import { useNavigate, Link } from "react-router-dom";
import axios from "axios";

const InventoryList = () => {
  const [items, setItems] = useState([]);
  const [search, setSearch] = useState("");
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState(null);
  const navigate = useNavigate(); 

  useEffect(() => {
    axios
      .get("http://localhost:8080/api/lost-items/status/stored")
      .then((response) => {
        setItems(response.data);
        setLoading(false);
      })
      .catch((err) => {
        console.error("‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•:", err);
        setError("‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏î‡πâ");
        setLoading(false);
      });
  }, []);

  const formatThaiDate = (dateString) => {
    if (!dateString) return "-";
    const date = new Date(dateString);
    const day = date.getDate().toString().padStart(2, "0");
    const month = (date.getMonth() + 1).toString().padStart(2, "0");
    const year = date.getFullYear() + 543;
    return `${day}/${month}/${year}`;
  };

  const filteredItems = items.filter((item) =>
    item.name.toLowerCase().includes(search.toLowerCase())
  );

  return (
    <div className="container mt-4">
      <h2 className="text-center mb-3">‡∏´‡∏ô‡πâ‡∏≤‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏¥‡πà‡∏á‡∏Ç‡∏≠‡∏á</h2>

      <input
        type="text"
        placeholder="‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏™‡∏¥‡πà‡∏á‡∏Ç‡∏≠‡∏á..."
        value={search}
        onChange={(e) => setSearch(e.target.value)}
        className="form-control mb-3"
      />

      {loading ? (
        <p className="text-center">‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•...</p>
      ) : error ? (
        <p className="text-center text-danger">{error}</p>
      ) : (
        <>
          <table className="table table-bordered text-center">
            <thead className="thead-dark">
              <tr>
                <th>‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û</th>
                <th>‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó</th>
                <th>‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏¥‡πà‡∏á‡∏Ç‡∏≠‡∏á</th>
                <th>‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏û‡∏ö</th>
                <th>‡∏•‡πá‡∏≠‡∏Ñ‡πÄ‡∏Å‡∏≠‡∏£‡πå</th>
                <th>‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞</th>
                <th>‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç</th>
                <th>‡∏ô‡∏≥‡∏≠‡∏≠‡∏Å</th>
              </tr>
            </thead>
            <tbody>
              {filteredItems.map((item) => (
                <tr key={item.id}>
                  <td className="fs-4">
                    {/* ‡πÄ‡∏ä‡πá‡∏Ñ‡∏ß‡πà‡∏≤ ‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏°‡∏µ‡∏Ñ‡πà‡∏≤‡πÑ‡∏´‡∏° */}
                    {item.picture ? (
                      <img src={item.picture} alt={item.name} style={{ width: '50px', height: '50px', objectFit: 'cover' }} />
                    ) : (
                      "üì∑"  // ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏†‡∏≤‡∏û‡πÉ‡∏´‡πâ‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏õ‡πá‡∏ô‡πÑ‡∏≠‡∏Ñ‡∏≠‡∏ô üì∑
                    )}
                  </td>
                  <td>{item.category}</td>
                  <td>{item.name}</td>
                  <td>{formatThaiDate(item.date)}</td>
                  <td>{item.locker}</td>
                  {/* ‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡∏ô‡∏£‡∏±‡∏ö‡∏î‡πâ‡∏ß‡∏¢ ‡∏Å‡πá‡∏Ñ‡∏∑‡∏≠‡∏Ñ‡∏ô‡∏ó‡∏µ‡πà‡∏•‡πâ‡∏≠‡∏Ñ‡∏≠‡∏¥‡∏ô‡πÅ‡∏•‡∏∞‡∏£‡∏±‡∏ö‡∏Ç‡∏≠‡∏á‡πÄ‡∏Ç‡πâ‡∏≤ */}
                  <td>{item.status}</td>
                  <td>
                    <Link to={`/edit/${item.id}`} className="btn btn-warning btn-sm">
                      üìù
                    </Link>
                  </td>
                  <td>
                    <Link to={`/remove/${item.id}`} className="btn btn-danger btn-sm">
                      üì§
                    </Link>
                  </td>
                </tr>
              ))}
            </tbody>
          </table>

          <div className="d-flex justify-content-end mt-3">
            <button onClick={() => navigate("/home")} className="btn btn-secondary">
              ‡∏¢‡πâ‡∏≠‡∏ô‡∏Å‡∏•‡∏±‡∏ö
            </button>
          </div>
        </>
      )}
    </div>
  );
};

export default InventoryList;
